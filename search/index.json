[{"content":"Git can be configured more than just name and email.\nGit configurations are located in \u0026ldquo;global\u0026rdquo; as well as in local \u0026ldquo;repository\u0026rdquo;\n# List config in global by using flag \u0026quot;global\u0026quot; $ git config --global --list # List config in local repository. It also inherits from global config $ git config --list # Update name and email $ git config --global user.name \u0026quot;Abracus Doe\u0026quot; $ git config --global user.email \u0026quot;abracus.doe@example.org\u0026quot; # Update the default editor $ git config core.editor \u0026quot;vim\u0026quot; $ git config core.editor \u0026quot;nvim\u0026quot; # Add color to ui $ git config color.ui false Reference Customizing git ","date":"2023-05-30","permalink":"https://jiaklat.com/blog/configuring-git-config/","tags":["git"],"title":"Configuring Git Config"},{"content":"Is part of Public Key Infrastructure (PKI), a type of this is asymmetrical encryption. This is a mathematical trap-door function that enables secure encrypted communication within public-network, preventing eavesdropping.\nThe mathematical expression $$e^{\\Phi(k) \\times \\Phi(d)} \\bmod \\Mu = C$$ Legend:\n\\( \\Phi \\) : Phi-function\n\\( \\Mu \\) : The message (data)\n\\( C \\) : Ciphertext\nThe key take away from the mathematical expression is encrypting such a way that the forward (Message -\u0026gt; Ciphertext) is easy to compute but the backward (Ciphertext -\u0026gt; Message) is extremely difficult\n$$\\begin{align} \\begin{split} easy \u0026amp;\\to \\\\ ^{plaintext}ABC \u0026amp;\\implies B12A^{encrypted} \\\\ \u0026amp;\\gets hard \\end{split} \\end{align}$$ Analogy 1 Imagine this fish-trap, where the fish easily goes into the trap, but extremely difficult to for the fishes to escape once is inside of the trap.\nAnalogy 2 $$\\space A \\times B = C$$ multiplying A and B to get C is very easy, but figuring out A and B from C is extremely hard\nThis is only possible if A and B is extremely large and it is made up of prime-number. Example find the prime number of XXXXXX and YYYYYY where their multiplication is 153153257849.\n(hint: \\(196169 \\times 780721 \\) )\nPractical The informed reader is now understood that, given every key pair consist of private-key and public-key. Note that the public-key can be generated from private-key.\n# in ~/.ssh/ id_rsa2048 id_rsa2048.pub Alice can distribute as many public-key as she wanted. Imagine this public-key is an unlocked padlock. Whoever wants to send message to Alice in secret can use this unlocked padlock and lock the message.\nOnly Alice with the private-key, able to decrypt the encrypted message. Therefore Bob is successfully send messages to Alice.\nNote that the terminology can be extended to document signing. Since it is a asymmetrical key-pairs.\nOnly private-key able to decrypt public key\nthis also applies in reverse.\nOnly public-key able to decrypt private-key\nTherefore, if a message is encrypted with public-key, is call encrypting but if a message is encrypted with private-key, is call signing.\nWhy the term \u0026ldquo;signing\u0026rdquo; is used? because everyone with public-key is able to decrypt an encrypted message by private-key!\nHence, anyone with the public-key able to verify that this message is indeed from the private-key holder.\nConclusion, PKI is used many applications, such as SSH (Secure Shell; uses private-key pair) and TLS uses certificate with private-key pair.\n","date":"2020-12-20","permalink":"https://jiaklat.com/blog/brief-recall-of-private-public-key-rsa/","tags":["rsa","ssh","tls"],"title":"Brief Recall of Private Public Key Rsa"},{"content":"Proxy and Reverse-Proxy are just networking terminology. It helps to visualize it as between client and server.\nFor simplicity Client refers to users with devices (computer/mobile/RaspBerryPi); and Server refers to computer/host that serves the content\nProxy: The Server does not know who is the Client\nReverse-Proxy: The Client does not know which one is the Server\nBenefits of Proxy Anonymity Internet Service Provider generally does this Caching Block unwanted site GeoFancing (think of it as VPN. i.e.: NordVPN) Benefits of Reverse-Proxy Load Balancing (server scaling up and down) Caching Isolating internal traffic Logging Canary development Note: Read up on High Availability (HA Proxy)\n","date":"2020-04-06","permalink":"https://jiaklat.com/blog/proxy-and-reverse-proxy-terminology/","tags":["proxy","reverse-proxy"],"title":"Proxy and Reverse Proxy Terminology"},{"content":"Secure SHell is an application implementation to securely communicate and give commands to remote host. It work at Application Layer.\nWhereas Virtual Private Network is a protocol implementation to join a network. It work at Transport Layer.\nTODO: Insert kawaii drawings here :3\n","date":"2020-04-06","permalink":"https://jiaklat.com/blog/the-differences-between-ssh-and-vpn/","tags":["ssh","vpn"],"title":"The Differences Between SSH and VPN"},{"content":"Chatting in real-time invovled server-client communication. For example, PHP web is best for Create-Read-Update-Delete operation, but it is inefficient for chatting, as the client need to pool against the server for new data periodically. This would not scale for the server against the growth of user base.\nThis is where Node.JS/Express/MongoDB/Socket.io comes in. The tech stack allows distribute system.\nWhile digging into these, I realized that Erlang/OTP (Open Telecom Platform) was developed for this purpose. I could say that this is a specialized programming language. It purpose is to have a hot-swappable code, it allow processes to run forever without downtime. It solves distributed system. Real-world application like WhatsApp and Facebook chat use this solution. However it is inefficient for CRUD operation (or is it?ðŸ¤”)\n","date":"2018-03-16","permalink":"https://jiaklat.com/blog/my-naive-thoughts-of-crud-and-chat-systems/","tags":["naive-thoughts"],"title":"My Naive Thoughts of CRUD and Chat Systems"},{"content":"Hadoop: A set of open source programs and procedures which anyone can use as the \u0026ldquo;backbone\u0026rdquo; of their big data operations.\nThe four module of Hadoop\nDistributed File-System MapReduce Hadoop Common YARN Distributed File-System The most important two are Distributed File System and MapReduce Distributed File System in Hadoop system uses its own file system that \u0026ldquo;sit above\u0026rdquo; the file system. Meaning it can be accessed using any computer, and operating system. While MapReduce provides the basic tools for \u0026ldquo;massaging\u0026rdquo; the data\nMapReduce Read data from database, putting it into a format suitable for analysis (Map). Performing mathematical operations, i.e.: counting the numbers of males aged 30+ in a customer database (Reduce).\nHadoop Common Another module which provides the tools (in Java) needed for the user\u0026rsquo;s computer system to read data stored under the Hadoop file system\nYARN Final module of the four that handles resources of the systems storing the data and running the analysis\nOver the years, various other procedures, libraries or features have come to be considered part of the Hadoop framework.\nApache Software Foundation releases this Hadoop systems in year 2005\n","date":"2018-03-15","permalink":"https://jiaklat.com/blog/my-naive-thoughts-four-module-of-hadoop/","tags":["naive-thoughts"],"title":"My Naive Thoughts Four Module of Hadoop"},{"content":"Linux (also known as GNU/Linux) is a clone of UNIX, the multi-user operating system which can be accessed by many users simultaneously. Linux can also be used in mainframes and servers without any modifications (and this attracts attackers).\nBut this raises security concerns as an unsolicited or malign user can corrupt, change or remove crucial data.\nOwnership Permission ","date":"2017-02-06","permalink":"https://jiaklat.com/blog/how-linux-handles-file-permission/","tags":["linux","file-permission"],"title":"How Linux handles file permission"},{"content":"$ useradd -aG ricky ","date":"2017-02-06","permalink":"https://jiaklat.com/blog/how-to-manage-users-in-linux/","tags":["linux","user-management"],"title":"How to use useradd command"}]